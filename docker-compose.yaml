version: '3'
networks:
  ms-net:
    driver: bridge

services:
  zookeeper:
    image: 'docker.io/bitnami/zookeeper:3-debian-10'
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - ms-net
  kafka:
      image: 'docker.io/bitnami/kafka:2-debian-10'
      ports:
        - "9092:9092"
        - "9093:9093"
      environment:
        - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
        - ALLOW_PLAINTEXT_LISTENER=yes
        - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
        - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
        - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://kafka:9093
        - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      depends_on:
        - zookeeper
      networks:
        - ms-net
  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9093'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    networks:
      - ms-net
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - ms-net
  gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    depends_on:
      - kafka
      - mongo
    networks:
      - ms-net
  subscriber:
    build: ./subscriber
    ports:
      - "3001:3001"
    depends_on:
      - kafka
      - mongo
    networks:
      - ms-net
